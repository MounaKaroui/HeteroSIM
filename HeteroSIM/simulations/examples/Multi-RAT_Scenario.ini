[General]
network=heterosim.simulations.networks.SimpleNetwork
cmdenv-output-file = ${resultdir}/${configname}-${iterationvarsf}#${repetition}.out
debug-on-errors = true
print-undisposed = true
cmdenv-express-mode = true
cmdenv-autoflush = true
**.scalar-recording = true
**.vector-recording = false

sim-time-limit =10s
outputvectormanager-class="omnetpp::envir::SqliteOutputVectorManager"
outputscalarmanager-class="omnetpp::envir::SqliteOutputScalarManager"

#### cars numbers
*.numCars =${nbrTrs=40}

output-vector-file = ${resultdir}/${configname}-${nbrTrs}-${repetition}.vec
output-scalar-file = ${resultdir}/${configname}-${nbrTrs}-${repetition}.sca


#### CAR mobility parameters
*.*.mobility.initFromDisplayString = false
*.car[*].mobility.constraintAreaMaxX = 500m
*.car[*].mobility.constraintAreaMinX = 0m
*.car[*].mobility.constraintAreaMaxY = 500m
*.car[*].mobility.constraintAreaMinY = 0m
*.car[*].mobility.constraintAreaMaxZ = 1.5m
*.car[*].mobility.constraintAreaMinZ = 1.5m
*.car[*].mobility.speed = 5.3mps
#### Radio medium
*.radioMedium.pathLossType = "TwoRayInterference"

### common radio settings
*.car[*].wlan[*].typename = "VanetNic"
*.car[*].wlan[*].bitrate= ${bitrate=6} Mbps
*.car[*].wlan[*].mac.maxQueueSize = 4000
*.car[*].applLayer[*].msgLength=${packetLength=600}B

[Config LoadProducers]
########## LoadProducers settings
*.car[0..9].*.isDeciderActive=false
*.car[0..9].*.isRandomDecision=false
*.car[0..9].withMode4 = false
*.car[0..9].decisionMaker.mode4IsActive = false
*.car[0..9].numRadios = 1
*.car[0..9].numApps=1
*.car[0..9].*.interfaceToProtocolMapping="0:80211p"
*.car[0..9].applLayer[0].typename="ControlTrafficApp"
*.car[0..9].applLayer[0].interfaceId=0
*.car[0..9].applLayer[0].sendInterval= 10*((${packetLength} * 8) / ${bitrate}) * (100/(${OfferedLoadRate1=10.. 100 step 10}))* 1us #
*.car[0..9].applLayer[0].startTime=uniform(0s,this.sendInterval) 
*.car[0..9].applLayer[0].stopTime=-1s


######### Result files settings
seed-set=${repeatId=0..4} ## repetitions
output-vector-file = ${resultdir}/${configname}-${OfferedLoadRate1}-${repeatId}.vec
output-scalar-file = ${resultdir}/${configname}-${OfferedLoadRate1}-${repeatId}.sca

[Config decider]
include mode4.ini
extends=LoadProducers
num-rngs = 4
### common app setting
*.car[10..39].*.isDeciderActive =true
*.car[10..39].withMode4 = true
*.car[10..39].decisionMaker.mode4IsActive = true
**.mode4isActive = true ## To add components for Mode4 in network (deployer and binder)
*.car[10..39].*.interfaceToProtocolMapping="0:80211p,1:mode4"
### Application settings 
*.car[10..39].numApps = 3
#data traffic
*.car[10..39].applLayer[0].appID=0
*.car[10..39].applLayer[0].typename="VanetApp" 

*.car[10..39].applLayer[0].sendInterval=(${nbrTrs}-10)*((${packetLength} * 8) /(${bitrate}*2)) * (100/(${OfferedLoadRate2=50}*0.98))* 1us#0.02s
*.car[10..39].applLayer[0].startTime=uniform((${nbrTrs}-10)*((${packetLength} * 8) / (${bitrate}*2)) * (100/(${OfferedLoadRate2}*0.02))* 1us, (${nbrTrs}-10)*((${packetLength} * 8) / (${bitrate}*2)) * (100/(${OfferedLoadRate2}*0.02))* 1us+1us)
#control data
*.car[10..39].applLayer[1..2].typename="ControlTrafficApp"
*.car[10..39].applLayer[1..2].stopTime=-1s
*.car[10..39].applLayer[1..2].sendInterval=(${nbrTrs}-10)*((${packetLength} * 8) / (${bitrate}*2)) * (100/(${OfferedLoadRate2}*0.02))* 1us ## 2 % control traffic
*.car[10..39].applLayer[1..2].startTime=uniform(0s,this.sendInterval) 

#control data for network 1
*.car[10..39].applLayer[1].appID=1
*.car[10..39].applLayer[1].interfaceId =0 ## 802.11
#control data for network 2
*.car[10..39].applLayer[2].appID=2
*.car[10..39].applLayer[2].interfaceId =1 ## LTE

### Collect Stats parameters
*.car[*].*.averageMethod = "ema"
*.car[*].*.sendPeriod =0.1s
*.car[*].*.gamma =3

[Config CCA]
extends=decider
result-dir = MultiRAT_scenario1/CCA
*.car[*].*.simpleWeights="0.4616,0.5383,0.0"


[Config VRU]
extends=decider
result-dir = MultiRAT_scenario1/VRU
*.car[*].*.simpleWeights="0.0789,0.9210,0.0"

[Config TI]
extends=decider
result-dir = MultiRAT_scenario1/TI
*.car[*].*.simpleWeights="0.8955,0.1044,0.0"

[Config random]
extends= decider
result-dir = MultiRAT_scenario1/random
*.car[10..39].*.isDeciderActive=false
*.car[10..39].*.isRandomDecision=true


