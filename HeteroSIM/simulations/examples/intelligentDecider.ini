[General]
network=heterosim.simulations.networks.SimpleNetwork
debug-on-errors = true
print-undisposed = true
cmdenv-express-mode = true
cmdenv-autoflush = true
**.scalar-recording = true
**.vector-recording = true

output-vector-file = results/${configname}-${repetition}.vec
output-scalar-file = results/${configname}-${repetition}.sca

sim-time-limit = 100s
outputvectormanager-class="omnetpp::envir::SqliteOutputVectorManager"
outputscalarmanager-class="omnetpp::envir::SqliteOutputScalarManager"

#### CAR mobility parameters
*.*.mobility.initFromDisplayString = false
*.car[*].mobility.constraintAreaMaxX = 500m
*.car[*].mobility.constraintAreaMinX = 0m
*.car[*].mobility.constraintAreaMaxY = 500m
*.car[*].mobility.constraintAreaMinY = 0m
*.car[*].mobility.constraintAreaMaxZ = 1.5m
*.car[*].mobility.constraintAreaMinZ = 1.5m
*.car[*].mobility.speed = 0mps

#### cars numbers
*.numCars = ${nbrTrs=6}
#### Radio medium
*.radioMedium.pathLossType = "TwoRayInterference"
#####


[Config intelligentDecider]
### common radio setting 
*.car[*].wlan[*].typename = "VanetNic"
*.car[*].wlan[*].bitrate= ${bitrate=6} Mbps
*.car[*].numApps = 3
*.car[*].numRadios = 2
### common app setting 
*.car[*].applLayer[*].msgLength=${packetLength=200}B

########## decider active nodes : common setting ########

*.car[*].*.interfaceToProtocolMapping="0:80211p,1:80211p"
####with decider active nodes : interface in network 1
*.car[*].wlan[0].radio.channelNumber = 172
*.car[*].wlan[1].radio.channelNumber = 180

*.car[*].decisionMaker.simpleWeights="0.7,0.1,0.1,0.1"
#data traffic
*.car[*].applLayer[0].appID=0
*.car[*].applLayer[0].typename="VanetApp"
*.car[*].applLayer[0].sendInterval=  (((${nbrTrs}-4) * ${packetLength} * 8) / ${bitrate}) * (100/${OfferedLoad=100})* 1us


#control data 
### without decider active nodes : common traffic setting
*.car[*].applLayer[1..2].typename="DynamicTrafficRateApp"
*.car[*].applLayer[1..2].offeredLoadRefreshInterval =1s
### App1 (Increasing interface ---> 0)
*.car[*].applLayer[1].appID=1
*.car[*].applLayer[1].interfaceId =0
*.car[*].applLayer[1].offeredLoadRate=  ((${nbrTrs}-4) * (${packetLength} * 8) / ${bitrate}) * (${simTimeLimit=100}s/(simTime()+1us)) * 1us 

### App2 (Decreasing ---> interface 1)
*.car[*].applLayer[2].appID=2
*.car[*].applLayer[2].interfaceId =1
*.car[*].applLayer[2].offeredLoadRate=  ((${nbrTrs}-4) * (${packetLength} * 8) / ${bitrate}) * ( 1 / (1- (simTime()/${simTimeLimit}s ))) * 1us 











