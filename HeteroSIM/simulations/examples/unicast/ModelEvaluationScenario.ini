[General]
network = heterosim.simulations.networks.SimpleNetwork2

sim-time-limit =10s
outputvectormanager-class="omnetpp::envir::SqliteOutputVectorManager"
outputscalarmanager-class="omnetpp::envir::SqliteOutputScalarManager"
**.vector-recording = false

#### nodes numbers
*.numNodes = ${nbrTrs=24}
 
######## Common WiFi radio setting  ########
*.node[*].wlan[*].bitrate= ${bitrate=24}Mbps
*.node[*].wlan[*].mac.maxQueueSize = 34#  -1 means unlimited
*.node[*].lteNic.mac.queueSize=${packetLength}*34 * 1B


########Common LTE radio setting  ########
*.eNB*.nicType = "LteNicEnbD2DExperimental"
*.eNB*.**.amcMode = "D2D"
**.usePreconfiguredTxParams = true
**.d2dCqi = ${LTEcqi=8}
### mobility
*.eNB.mobility.initFromDisplayString = false
*.eNB.mobility.initialX = ${simArea}m
*.eNB.mobility.initialY = ${simArea}m
############### AMC MODULE PARAMETERS ############### 
#TODO fix
**.numRbDl = 50
**.numRbUl = 50
**.numBands = 50

######## Common nodes app setting  ########
*.node[*].applLayer[*].msgLength=${packetLength=200}B

#### node mobility parameters
*.*.mobility.initFromDisplayString = false
*.node[*].mobility.constraintAreaMax* = ${simArea=50}m
*.node[*].mobility.constraintAreaMin* = 0m
*.node[*].mobility.*Z = 0m

seed-set=${repeatID=0..9} ## repetitions

[Config deciderWithMultipleApps]


*.node[0..11].numWiFiRadios = 1
*.node[0..11].lteInterfaceIsActive = true
*.node[0..11].*.interfaceToProtocolMapping="0:WiFi,1:LTE"
*.node[0..11].*.minNumOfControlTrafficPktInDLTByApp="0:0,1:0,2:0,3:0,4:0"


*.node[0..11].numApps = 5
#data traffic
*.node[0..11].applLayer[0..2].typename="GenericApp"
*.node[0..11].applLayer[0].appID=0
*.node[0..11].applLayer[1].appID=1
*.node[0..11].applLayer[2].appID=2

# thanks to expression "string(10+ancestorIndex(1)))" node[10] sends to node[20], node[11] to node[21], node[12] to node[22], and so one 
*.node[0..11].applLayer[0..2].destAddress="node["+ string((12+ancestorIndex(1))) +"]" 
*.node[0..11].applLayer[0..2].startTime=uniform(0.5s, 1s)
*.node[0..11].applLayer[0..2].sendInterval= 3 * 12*((${packetLength} * 8) / (2*${bitrate})) * (100/(${OfferedLoadRate=20..200 step 20})) * 1us + uniform(0s,((25* 0.02)/${OfferedLoadRate})* 1s)  #

#control traffic
*.node[0..11].applLayer[3..4].typename="ControlTrafficApp"
*.node[0..11].applLayer[3].sendInterval= 12*((${packetLength} * 8) / (${bitrate})) * (100/1)* 1us
*.node[0..11].applLayer[4].sendInterval= 12*((${packetLength} * 8) / (${bitrate})) * (100/1)* 1us
*.node[0..11].applLayer[3..4].startTime= uniform(0s,this.sendInterval)
#*.node[0..11].*.controlTrafficSendInterval= 10*((${packetLength} * 8) / (${bitrate})) * (100/5)* 1us
#control data for network 1 
*.node[0..11].applLayer[3].appID=3
*.node[0..11].applLayer[3].destAddress="node["+ string((12+ancestorIndex(1))) +"]" 
*.node[0..11].applLayer[3].interfaceId =0
#control data for network 2
*.node[0..11].applLayer[4].appID=4
*.node[0..11].applLayer[4].destAddress="node["+ string((12+ancestorIndex(1))) +"]" 
*.node[0..11].applLayer[4].interfaceId =1

#Nodes for traffic destination
*.node[12..23].*.isDeciderActive =false
*.node[12..23].lteInterfaceIsActive = true
*.node[12..23].numApps = 5
*.node[12..23].applLayer[*].startTime = 200000s # 200000s to do not generate message
*.node[12..23].applLayer[0..2].typename="GenericApp"
*.node[12..23].applLayer[0].appID =0
*.node[12..23].applLayer[1].appID =1
*.node[12..23].applLayer[2].appID =2
*.node[12..23].applLayer[3..4].typename="ControlTrafficApp"
*.node[12..23].applLayer[3].interfaceId =0
*.node[12..23].applLayer[4].interfaceId =1
*.node[12..23].applLayer[3].appID=3
*.node[12..23].applLayer[4].appID=4

[Config AllInOne]
extends=deciderWithMultipleApps

result-dir = AllInOne-allApps-final

#DURATs decision enabled nodes
*.node[0..2].*.isDeciderActive=true
*.node[0..2].*.simpleWeights="0.936544,0.0631005,0.00035559;0.0372046,0.962266,0.000529559;0.0783219,0.0295513,0.892127"
*.node[0..5].*.dltMaxByAppByInterfaceId="0:0:0.05;0:1:0.05;1:0:1;1:1:1;2:0:0.25;2:1:0.25;3:0:0.01;3:1:0.01;4:0:0.01;4:1:0.01"
#*.node[0..3].*.dltMaxByAppByInterfaceId="0:0:0.1;0:1:0.1;1:0:0.001;1:1:0.01;2:0:0.025;2:1:0.025;3:0:0.001;3:1:0.01;4:0:0.001;4:1:0.01" experimental

#DURATs-simple decision enabled nodes
*.node[3..5].*.isDeciderActive=true
*.node[3..5].*.naiveSingleCriterionBasedDecision=true 
*.node[3..5].*.naiveSingleCriterionBasedDecisionChoice="0;1;2"
#*.node[3..5].*.dltMaxByAppByInterfaceId="0:0:0.05;0:1:0.05;1:0:0.1;1:1:1;2:0:0.25;2:1:0.25;3:0:0.01;3:1:0.01;4:0:0.01;4:1:0.01" experimental conf

#Random decision nodes
*.node[6..8].*.isDeciderActive=false
*.node[6..8].*.isRandomDecision=true

#Fixed interface decision nodes
*.node[9..11].*.isDeciderActive=false
*.node[9..11].*.isRandomDecision=true
*.node[9..11].*.dummyNetworkChoice = "0;1;1" 


[Config DURATs]
extends=deciderWithMultipleApps

result-dir = DURATs-allDDRApps

#DURATs decision enabled nodes
*.node[*].*.isDeciderActive=true
*.node[*].*.simpleWeights="0.936544,0.0631005,0.00035559;0.936544,0.0631005,0.00035559;0.936544,0.0631005,0.00035559"
*.node[*].*.dltMaxByAppByInterfaceId="0:0:1;0:1:1;1:0:1;1:1:1;2:0:1;2:1:1;3:0:1;3:1:1;4:0:1;4:1:1"

