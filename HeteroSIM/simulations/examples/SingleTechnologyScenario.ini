[General]
network=heterosim.simulations.networks.SimpleNetwork
debug-on-errors = true
print-undisposed = true
cmdenv-express-mode = true
cmdenv-autoflush = true
**.scalar-recording = true
**.vector-recording = true

sim-time-limit =${timeLimit=10s}
outputvectormanager-class="omnetpp::envir::SqliteOutputVectorManager"
outputscalarmanager-class="omnetpp::envir::SqliteOutputScalarManager"


#### CAR mobility parameters
*.*.mobility.initFromDisplayString = false
*.car[*].mobility.constraintAreaMaxX = 500m
*.car[*].mobility.constraintAreaMinX = 0m
*.car[*].mobility.constraintAreaMaxY = 500m
*.car[*].mobility.constraintAreaMinY = 0m
*.car[*].mobility.constraintAreaMaxZ = 1.5m
*.car[*].mobility.constraintAreaMinZ = 1.5m
*.car[*].mobility.speed = 5.3mps

#### cars numbers
*.numCars = ${nbrTrs=20}
#### Radio medium
*.radioMedium.pathLossType = "TwoRayInterference"
### common radio settings
*.car[*].wlan[*].typename = "VanetNic"
*.car[*].wlan[*].bitrate= ${bitrate=6} Mbps
*.car[*].wlan[*].mac.maxQueueSize = 4000
*.car[*].applLayer[*].msgLength=${packetLength=204}B

[Config LoadProducers]
########## LoadProducers settings
#*.car[0..9].applLayer[*].msgLength=${packetLength1=100}B
*.car[0..9].*.isDeciderActive=false
*.car[0..9].numRadios = 1
*.car[0..9].numApps=1
*.car[0..9].wlan[0].radio.channelNumber = 172 #### Interface 0
*.car[0..9].*.interfaceToProtocolMapping="0:80211p"
*.car[0..9].applLayer[0].typename="ControlTrafficApp"
*.car[0..9].applLayer[0].interfaceId=0
*.car[0..9].applLayer[0].sendInterval= (${nbrTrs}-10)*((${packetLength} * 8) / ${bitrate}) * (100/(${OfferedLoadRate1=10 .. 100 step 10}))* 1us
*.car[0..9].applLayer[0].startTime=uniform(0s,this.sendInterval) 
*.car[0..9].applLayer[0].stopTime=-1s
######### Result files settings
seed-set=${repeatId=0} ## repetitions
output-vector-file = ${resultdir}/${configname}-${OfferedLoadRate1}-${repeatId}.vec
output-scalar-file = ${resultdir}/${configname}-${OfferedLoadRate1}-${repeatId}.sca

[Config loadBalancing]
extends=LoadProducers
*.car[10..19].*.isDeciderActive =true
######## With decider active nodes ########
*.car[10..19].numRadios = 2
*.car[10..19].*.interfaceToProtocolMapping="0:80211p,1:80211p"
*.car[10..19].wlan[0].radio.channelNumber = 172 
*.car[10..19].wlan[1].radio.channelNumber = 180
*.car[10..19].numApps = 3
#data traffic
*.car[10..19].applLayer[0].appID=0
*.car[10..19].applLayer[0].typename="VanetApp"
*.car[10..19].applLayer[0].sendInterval= (${nbrTrs}-10)*((${packetLength} * 8) /(${bitrate})) * (100/(${OfferedLoadRate2=50}*0.9))* 1us ## 98 % of data traffic
*.car[10..19].applLayer[0].startTime=uniform((${nbrTrs}-10)*((${packetLength} * 8) / (${bitrate})) * (100/(${OfferedLoadRate2}*0.1))* 1us, 1s)
#control data
*.car[10..19].applLayer[1..2].typename="ControlTrafficApp"
*.car[10..19].applLayer[1..2].stopTime=-1s
*.car[10..19].applLayer[1..2].sendInterval= (${nbrTrs}-10)*((${packetLength} * 8) / (${bitrate})) * (100/(${OfferedLoadRate2}*0.1))* 1us ## 2 % control traffic
*.car[10..19].applLayer[1..2].startTime=uniform(0s,this.sendInterval) 
#control data for network 1
*.car[10..19].applLayer[1].appID=1
*.car[10..19].applLayer[1].interfaceId =0
#control data for network 2
*.car[10..19].applLayer[2].appID=2
*.car[10..19].applLayer[2].interfaceId =1
### Collect Stats parameters
*.car[10..19].*.sendPeriod = (${nbrTrs}-10)*((${packetLength} * 8) / (${bitrate})) * (100/(${OfferedLoadRate2}*0.1))* 1us
*.car[10..19].*.averageMethod = "ema"
*.car[10..19].*.gamma=3





[Config CCA]
extends=loadBalancing
result-dir = loadBalancing200-50-hcf/CCA
*.car[*].*.simpleWeights="0.4616,0.5383,0.0"


[Config VRU]
extends=loadBalancing
result-dir = loadBalancing200-50-hcf/VRU
*.car[*].*.simpleWeights="0.0789,0.9210,0.0"

[Config TI]
extends=loadBalancing
result-dir = loadBalancing200-50-hcf/TI
*.car[*].*.simpleWeights="0.8955,0.1044,0.0"
*.car[10..19].*.gamma=10


[Config random]
extends= loadBalancing
result-dir = loadBalancing200-50-hcf/random
*.car[*].*.isDeciderActive =false




